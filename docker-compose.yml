version: '3.8'
services:

  traefik:
    image: "traefik:v2.5"
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
    networks:
      dev:
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  pomodoro_nginx:
    container_name: pomodoro_nginx
    restart: unless-stopped
    build:
      target: pomodoro_nginx
      context: .
      args:
        - APP_DIR=.
        - NGINX_CONF_DIR=./.docker/nginx
        - PHP_CONF_DIR=./.docker/php
        - INSTALL_DIR=app
        - NGINX_VERSION=1.20
        - PHP_VERSION=8.0.10
        - TZ=Europe/Paris
    depends_on:
      - pomodoro_fpm
    networks:
      dev:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api_master_v1_nginx.rule=Host(`pomodoro.dev.local`)"
      - "traefik.http.routers.api_master_v1_nginx.entryPoints=http"
    volumes:
      - "php_socket:/var/run/php"
      - "./public:/srv/app/public:rw"
      - "./.docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro"

  pomodoro_fpm:
    container_name: pomodoro_fpm
    restart: unless-stopped
    env_file:
      - .env.docker
    depends_on:
      - pomodoro_db
    build:
      context: .
      target: pomodoro_php
      args:
        - APP_ENV=prod
        - APP_DIR=.
        - NGINX_CONF_DIR=./.docker/nginx
        - PHP_CONF_DIR=./.docker/php
        - ENTRYPOINT_FILE=docker-entrypoint.sh
        - GID=1000
        - UID=1000
        - INSTALL_DIR=app
        - PHP_VERSION=8.1.0
        - TZ=Europe/Paris
    environment:
        - POSTGRES_DB=pomodoro
        - POSTGRES_USER=pomodoro
        - POSTGRES_PASSWORD=pomodoro
        - DB_HOST=pomodoro_db
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      dev:
    volumes:
      - "php_socket:/var/run/php"
      - ".:/srv/app:rw"
      - "./.docker/php/conf.d/symfony.prod.ini:/usr/local/etc/php/conf.d/symfony.ini:ro"

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    networks:
      dev:
    logging:
      driver: 'none'
    ports:
      - '1025:1025' # smtp server
      - '8025:8025' # web ui

  pomodoro_db:
    container_name: pomodoro_db
    restart: unless-stopped
    image: postgres:13-alpine
    networks:
      - dev
    environment:
      POSTGRES_USER: pomodoro
      POSTGRES_PASSWORD: pomodoro
    volumes:
      - pomodoro_db_volume:/var/lib/postgresql/data
    ports:
      - "5432"

volumes:
  php_socket:
  pomodoro_db_volume:

networks:
  dev:
    external: true